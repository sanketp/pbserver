{"version":3,"sources":["services/dbactions.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Numbers","props","entries","vals","filt","map","entry","name","number","pers","setPer","regexp","RegExp","matches","filter","x","test","length","ele","Num","type","onClick","myID","window","confirm","dbService","Filter","value","onChange","handler","PersonForm","nameChange","num","numChange","clChange","ErrorNotification","message","className","App","useState","persons","setPersons","newName","setNewName","newNum","setNewNum","newSearch","setNewSearch","noti","setNoti","useEffect","initialBook","search","event","target","undefined","find","returnedPerson","concat","setTimeout","tempID","updatedBook","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d3b454f5.chunk.js","sourcesContent":["import axios from 'axios'\r\n//const baseUrl = 'http://localhost:3001/api/persons'\r\nconst baseUrl = '/api/persons'\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deleteperson = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst updateperson = (id, newNumber, newName) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, { number: newNumber, name: newName })\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {\r\n    getAll, create, update, deleteperson, updateperson\r\n}","import React, { useState, useEffect } from 'react'\r\nimport dbService from './services/dbactions'\r\n\r\n\r\nconst Numbers = (props) => {\r\n    const entries = props.vals\r\n\r\n    if (props.filt === \"\") {\r\n        return (\r\n            <div>\r\n                <h1>Numbers</h1>\r\n                {entries.map(entry =>\r\n                    <Num key={entry.id} id={entry.id} name={entry.name} number={entry.number} pers={entries} setPer={props.setPer} />\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        const regexp = new RegExp(props.filt, 'i')\r\n        const matches = entries.filter(x => regexp.test(x.name))\r\n        if (matches.length === 0) {\r\n            return (\r\n                <div>\r\n                    <h1>Numbers</h1>\r\n                    Person Not Found!\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n                <h1>Numbers</h1>\r\n                {matches.map(ele => <Num key={ele.id} id={ele.id} name={ele.name} number={ele.number}\r\n                    pers={entries} setPer={props.setPer} />)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst Num = (props) => {\r\n    const handleDelete = (myID) => {\r\n        if (window.confirm(\"you sure you want to delete?\")) {\r\n            dbService\r\n                .deleteperson(myID)\r\n                .then(response => {\r\n                    props.setPer(props.pers.filter(ele => ele.id !== myID))\r\n                })\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            {props.name} {props.number} <button type=\"button\" onClick={() => handleDelete(props.id)} > delete</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Filter = (props) => {\r\n    return (\r\n        <div>\r\n            search: <input value={props.value} onChange={props.handler} />\r\n        </div>\r\n        )\r\n}\r\n\r\nconst PersonForm = (props) => {\r\n    return (\r\n        <form>\r\n            <div>\r\n                name: <input value={props.name} onChange={props.nameChange} />\r\n            </div>\r\n            <div>\r\n                number: <input value={props.num} onChange={props.numChange} />\r\n            </div>\r\n            <div>\r\n                <button type=\"button\" onClick={props.clChange}>add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ErrorNotification = ({ message }) => {\r\n    if (message == null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"notiDisplay\">{message}</div>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([])\r\n    const [newName, setNewName] = useState('')\r\n    const [newNum, setNewNum] = useState('')\r\n    const [newSearch, setNewSearch] = useState('')\r\n    const [noti, setNoti] = useState(null)\r\n\r\n    useEffect(() => {\r\n        dbService\r\n            .getAll()\r\n            .then(initialBook => {\r\n                setPersons(initialBook)\r\n            })\r\n    }, [])\r\n    \r\n\r\n    const handleNameChange = (event) => {\r\n        setNewName(event.target.value)\r\n    }\r\n\r\n    const handleNumChange = (event) => {\r\n        setNewNum(event.target.value)\r\n    }\r\n\r\n    const handleSearchChange = (event) => {\r\n        setNewSearch(event.target.value)\r\n    }\r\n\r\n    const handleClick = (event) => {\r\n        if (newName !== \"\") {\r\n            if (persons.find(x => x.name === newName) === undefined) {\r\n                setNoti(newName + ' was added to the phonebook');\r\n                const personObj = {\r\n                    name: newName,\r\n                    number: newNum\r\n                }\r\n                dbService\r\n                    .create(personObj)\r\n                    .then(returnedPerson => {\r\n                        setPersons(persons.concat(returnedPerson))\r\n                        setNewName('')\r\n                        setNewNum('')\r\n                    })\r\n                setTimeout(() => { setNoti(null) }, 5000)\r\n   \r\n            }\r\n            else {\r\n                if (window.confirm(newName + \" already exists, do you want to replace it\")) {\r\n                    setNoti(newName + ' number was updated');\r\n                    const tempID = persons.find(x => x.name === newName).id;\r\n                    const personObj = {\r\n                        id: tempID,\r\n                        name: newName,\r\n                        number: newNum\r\n                    }\r\n                    dbService\r\n                        .update(tempID, personObj)\r\n                        .then(updatedBook => {\r\n                            setPersons(updatedBook)\r\n                        })\r\n                    setNewName('')\r\n                    setNewNum('')\r\n                    setTimeout(() => { setNoti(null) }, 5000)\r\n                }\r\n            }\r\n        \r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        \r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            <ErrorNotification message={noti} />\r\n            <Filter search={newSearch} handler={handleSearchChange} />\r\n            <PersonForm name={newName} nameChange={handleNameChange} num={newNum} numChange={handleNumChange} clChange={handleClick} />\r\n            <Numbers vals={persons} filt={newSearch} setPer={setPersons} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\n\n\nReactDOM.render(\n    <App />,   document.getElementById('root')\n);\n"],"sourceRoot":""}